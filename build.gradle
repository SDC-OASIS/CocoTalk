plugins {
    id 'org.springframework.boot' version '2.6.2'
    id 'io.spring.dependency-management' version '1.0.11.RELEASE'
    id 'java'
}

ext {
    set('springCloudVersion', "2021.0.0")
}


group = 'com.cocotalk'
version = '1.0'

compileJava.options.encoding = 'UTF-8'

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

repositories {
    mavenCentral()
}


dependencies {
    // Spring MVC
    implementation 'org.springframework.boot:spring-boot-starter-web'
    implementation 'org.springframework.boot:spring-boot-starter-validation'
    compileOnly 'org.projectlombok:lombok'
    annotationProcessor 'org.projectlombok:lombok'
    developmentOnly 'org.springframework.boot:spring-boot-devtools'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.11.4'
    implementation group: 'org.json', name: 'json', version: '20190722'
    implementation group: 'org.apache.clerezza.ext', name: 'org.json.simple', version: '0.4'
    implementation group: 'com.google.code.gson', name: 'gson', version: '2.8.6'

    //spring cloud
    implementation 'org.springframework.cloud:spring-cloud-starter-netflix-eureka-client'

    testImplementation('org.springframework.boot:spring-boot-starter-test:2.3.0.RELEASE') {
        exclude group: 'org.junit.vintage', module: 'junit-vintage-engine'
        exclude group: 'com.vaadin.external.google', module: 'android-json'
    }


    // DB
    implementation group: 'org.springframework.boot', name: 'spring-boot-starter-data-jpa', version: '2.3.0.RELEASE'
    implementation group: 'org.mariadb.jdbc', name: 'mariadb-java-client', version: '2.6.0'
    implementation group: 'mysql', name: 'mysql-connector-java', version: '8.0.20'
    implementation group: 'com.zaxxer', name: 'HikariCP', version: '3.4.5'

    //JWT
    implementation 'io.jsonwebtoken:jjwt-api:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-impl:0.11.2'
    runtimeOnly 'io.jsonwebtoken:jjwt-gson:0.11.2'

    implementation group : 'com.squareup.okhttp3', name : 'mockwebserver', version: '4.7.2'
    implementation group: 'commons-codec', name: 'commons-codec', version: '1.14'

    // Mail
    implementation 'org.springframework.boot:spring-boot-starter-mail'

    //lang3
    implementation "org.apache.commons:commons-lang3:3.11"

    //redis
    implementation 'org.springframework.boot:spring-boot-starter-data-redis:2.3.1.RELEASE'

    //MapStruct
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor 'org.mapstruct:mapstruct-processor:1.4.2.Final'

    //swagger
    implementation 'org.springdoc:springdoc-openapi-webmvc-core:1.6.3' //통합 Springdoc
    implementation 'io.springfox:springfox-swagger-ui:3.0.0'

    //webClient를 위한 webFlux
    implementation("org.springframework.boot:spring-boot-starter-webflux")

    //s3
    implementation 'org.springframework.cloud:spring-cloud-starter-aws:2.0.1.RELEASE'

    // Prometheus
    implementation 'org.springframework.boot:spring-boot-starter-actuator'
    runtimeOnly 'io.micrometer:micrometer-registry-prometheus'


}

dependencyManagement {
    imports {
        mavenBom "org.springframework.cloud:spring-cloud-dependencies:${springCloudVersion}"
    }
}


test {
    useJUnitPlatform()
}

clean {
    delete file('src/main/generated') // 인텔리제이 Annotation processor 생성물 생성위치
}